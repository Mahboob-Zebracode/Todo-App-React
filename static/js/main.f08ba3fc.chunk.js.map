{"version":3,"sources":["Components/Form.js","Components/Todo.js","Components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","onChange","e","console","log","target","value","type","className","onClick","event","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filterTodos","App","useState","status","setFilterTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPA0CeA,EAxCF,SAAC,GAA2D,IAA1DC,EAAyD,EAAzDA,UAAWC,EAA8C,EAA9CA,aAAcC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,UAqBrD,OACI,iCACF,uBAAOC,SArBY,SAACC,GACvBC,QAAQC,IAAIF,EAAEG,OAAOC,OACrBT,EAAaK,EAAEG,OAAOC,QAoBnBA,MAAOV,EACPW,KAAK,OAAOC,UAAU,eACtB,wBAAQC,QAnBY,SAACC,GACzBA,EAAMC,iBACNR,QAAQC,IAAI,OACZL,EAAS,GAAD,mBACHD,GADG,CACI,CAACc,KAAMhB,EAAWiB,WAAW,EAAOC,GAAoB,IAAhBC,KAAKC,aAEzDnB,EAAa,KAa2BW,UAAU,cAAcD,KAAK,SAAjE,SACE,mBAAGC,UAAU,yBAEf,qBAAKA,UAAU,SAAf,SACE,yBAAQP,SAdO,SAACS,GACtBV,EAAUU,EAAML,OAAOC,QAaiBW,KAAK,QAAQT,UAAU,cAAzD,UACE,wBAAQF,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,kC,OCFKY,EA/BF,SAAC,GAAmC,IAAlCN,EAAiC,EAAjCA,KAAMd,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,SAAUoB,EAAU,EAAVA,KAiBlC,OAEI,sBAAKX,UAAU,OAAf,UACI,oBAAIA,UAAS,oBAAeW,EAAKN,UAAY,YAAc,IAA3D,SAAkED,IAClE,wBAAQH,QAfS,WACrBV,EAASD,EAAMsB,KAAI,SAAAC,GACf,OAAGA,EAAKP,KAAOK,EAAKL,GACT,2BACAO,GADP,IACaR,WAAaQ,EAAKR,YAG5BQ,OAQ4Bb,UAAU,eAA7C,SACI,mBAAGA,UAAU,mBAEjB,wBAAQC,QArBM,WAClBV,EAASD,EAAMwB,QAAO,SAACC,GAAD,OAAOA,EAAGT,KAAOK,EAAKL,QAoBRN,UAAU,YAA1C,SACI,mBAAGA,UAAU,uBCNdgB,EAnBE,SAAC,GAAoC,IAAnC1B,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAAU0B,EAAiB,EAAjBA,YAClC,OACE,qBAAKjB,UAAU,iBAAf,SACE,oBAAIA,UAAU,YAAd,SAEAiB,EAAYL,KAAI,SAACD,GAAD,OACd,cAAC,EAAD,CACAP,KAAQO,EAAKP,KACbb,SAAUA,EACVD,MAAOA,EAEPqB,KAAQA,GADHA,EAAKL,YC0DHY,MAhEf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACN/B,EADM,KACKC,EADL,OAEa8B,mBAAS,IAFtB,mBAEN7B,EAFM,KAECC,EAFD,OAGe4B,mBAAS,OAHxB,mBAGNC,EAHM,KAGE5B,EAHF,OAIyB2B,mBAAS,IAJlC,mBAINF,EAJM,KAIOI,EAJP,KAMbC,qBAAU,WACRC,MACC,IAEHD,qBAAU,WACRE,IACAC,MACC,CAACnC,EAAO8B,IAGX,IAAMI,EAAgB,WACpB,OAAOJ,GACL,IAAK,YACHC,EAAe/B,EAAMwB,QAAO,SAAAH,GAAI,OAAsB,IAAnBA,EAAKN,cACxC,MACF,IAAK,cACHgB,EAAe/B,EAAMwB,QAAO,SAAAH,GAAI,OAAsB,IAAnBA,EAAKN,cACxC,MACF,QACEgB,EAAe/B,KAMfmC,EAAiB,WACnBC,aAAaC,QAAQ,QAASC,KAAKC,UAAUvC,KAE3CiC,EAAgB,WACpB,GAAqC,OAAlCG,aAAaI,QAAQ,SACtBJ,aAAaC,QAAQ,QAASC,KAAKC,UAAU,SACzC,CACL,IAAIE,EAAYH,KAAKI,MAAMN,aAAaI,QAAQ,UAChDvC,EAASwC,KAIZ,OACE,sBAAK/B,UAAU,MAAf,UACE,mCACE,+CAAuB,OACf,IACV,cAAC,EAAD,CACAV,MAAOA,EACPD,aAAcA,EACdD,UAAWA,EACXG,SAAUA,EACVC,UAAaA,IAEb,cAAC,EAAD,CACAD,SAAUA,EACVD,MAAOA,EACP2B,YAAcA,QCpDLgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f08ba3fc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Form = ({inputText, setInputText, todos, setTodos, setStatus}) => {\r\n// Here I am adding js code and funciton\r\nconst inputTextHandler = (e) => {\r\n   console.log(e.target.value); \r\n   setInputText(e.target.value);\r\n};\r\n\r\nconst submitTodoHandler = (event) => {\r\n  event.preventDefault();\r\n  console.log('hey');\r\n  setTodos([\r\n    ...todos, {text: inputText, completed: false, id: Math.random() * 1000}\r\n  ]);\r\n  setInputText('');\r\n};\r\n\r\nconst statsusHandler = (event) => {\r\n  setStatus(event.target.value);\r\n};\r\n\r\n\r\n    return (\r\n        <form>\r\n      <input onChange={inputTextHandler} \r\n      value={inputText}\r\n      type=\"text\" className=\"todo-input\" />\r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onChange={statsusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nconst Todo = ({text, todos, setTodos, todo}) => {\r\n\r\n    // Events \r\n    const deleteHandler = ()=>{\r\n        setTodos(todos.filter((el)=> el.id !== todo.id))\r\n    }\r\n    const conmpleteHandler = () => {\r\n        setTodos(todos.map(item=>{\r\n            if(item.id === todo.id){\r\n                return {\r\n                    ...item, completed : !item.completed\r\n                }\r\n            }\r\n            return item;\r\n        }))\r\n    };\r\n    \r\n    return (\r\n        \r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : ''}`}>{text}</li>\r\n            <button onClick={conmpleteHandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from \"react\";\r\nimport Todo from './Todo'\r\nconst TodoList = ({todos, setTodos, filterTodos}) => {\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\"> \r\n    {\r\n      filterTodos.map((todo)=>(\r\n        <Todo \r\n        text = {todo.text} \r\n        setTodos={setTodos} \r\n        todos={todos} \r\n        key={todo.id}\r\n        todo = {todo}\r\n        />\r\n      ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n//Importing Components\nimport Form from \"./Components/Form\";\nimport TodoList from \"./Components/TodoList\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filterTodos, setFilterTodos] = useState([]);\n  //Run once ater load\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n  // Use Effect\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  //Funcitons\n  const filterHandler = ()=>{\n    switch(status) {\n      case 'completed':\n        setFilterTodos(todos.filter(todo=> todo.completed === true));\n        break;\n      case 'uncompleted' :\n        setFilterTodos(todos.filter(todo=> todo.completed === false))\n        break;\n      default: \n        setFilterTodos(todos)\n        break;\n    }\n  };\n\n  // Save to Local\n  const saveLocalTodos = () =>{\n      localStorage.setItem('todos', JSON.stringify(todos))\n  }\n  const getLocalTodos = ()=>{\n    if(localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    }else {\n     let todoLocal = JSON.parse(localStorage.getItem('todos'));\n     setTodos(todoLocal);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1> My Todo List</h1>{\" \"}\n      </header>{\" \"}\n      <Form \n      todos={todos} \n      setInputText={setInputText} \n      inputText={inputText} \n      setTodos={setTodos} \n      setStatus = {setStatus}\n      />\n      <TodoList  \n      setTodos={setTodos} \n      todos={todos} \n      filterTodos= {filterTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}